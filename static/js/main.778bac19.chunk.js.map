{"version":3,"sources":["Home.tsx","lesson-1/Description/Description.tsx","lesson-1/widgets/InputWidget.tsx","lesson-1/Lesson1.tsx","lesson-2/model/counter.tsx","lesson-2/widgets/InputWidget.tsx","lesson-2/Lesson2.tsx","App.tsx","serviceWorker.ts","index.tsx","lesson-1/Lesson1.module.scss","lesson-2/Lesson2.module.scss","lesson-1/widgets/InputWidget.module.scss","lesson-2/widgets/InputWidget.module.scss","App.module.scss"],"names":["Home","_React$Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","react_default","a","createElement","href","React","Component","Description","setTimeout","Prism","className","InputWidget","_ref","change","add","remove","inputValue","Fragment","styles","buttons","index_es","variant","onClick","type","onChange","_ref2","currentTarget","Lesson1","props","_this","call","state","updateValue","setState","currentState","_this2","_this$state","lesson1","codeDemo","output","InputWidget_InputWidget","val","Description_Description","Counter","initialScope","handlers","scope","clear","_this$scope","result","set","_this$scope2","forEach","handler","concat","toConsumableArray","counter","inputChange","leftButtonHandler","rightButtonHandler","initialState","Lesson2","get","update","widgets_InputWidget_InputWidget","App","selectedIndex","handleListItemClick","ev","index","BrowserRouter","basename","process","container","spacing","item","xs","component","Link","to","button","selected","Route","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.778bac19.chunk.js","sourcesContent":["import React from 'react';\n\nexport class Home extends React.Component {\n\n    render() {\n        return (\n            <div>\n                <h1>Welcome to React Typescript tutorial</h1>\n                <p>This tutorial aims to create a step by step examples on how to build a scalable one-page application\n                    with functional programming pattern in mind</p>\n                <p>In the following lessons, we will extend counter from a single component to fully scalable MVVM app\n                    by using React as dom manipulation library</p>\n                <p>You can see the source code in Github:\n                    <a href=\"https://github.com/Shwartz/react-ts-lessons\">\n                        https://github.com/Shwartz/react-ts-lessons\n                    </a>\n                </p>\n\n                <h4>Lesson 1</h4>\n                <p>Counter widget built based on ReactJS documentation</p>\n\n                <h4>Lesson 2</h4>\n                <p>The same Counter widget however we moving out logic into a model.</p>\n            </div>\n        );\n    }\n}\n\nexport default Home;\n","import * as Prism from 'prismjs';\nimport React from 'react';\n\nexport const Description = () => {\n    setTimeout(() => {\n        Prism.highlightAll();\n    }, 0);\n\n    return (\n        <div>\n            <a href=\"https://github.com/Shwartz/react-ts-lessons/tree/master/src/lesson-1\">Source: /src/lesson-1</a>\n\n            <p>To produce a counter we use main Class Lesson1 with methods add(), remove() and update(). The counter\n                itself is a /widget/InputWidget.tsx.</p>\n\n            <p>The main problem with this approach is that we can't easily reuse this widget. To reuse we need to copy\n                all the methods and a widget to the needed Class. Clearly, this would create a lot of code\n                duplication.</p>\n\n            <p>This is our Lesson1 Class:</p>\n\n            <pre>\n                <code className=\"language-javascript\">\n{`\nexport class Lesson1 extends React.Component {\n\n    constructor(props: IProps) {\n        super(props);\n    }\n\n    state: IState = {\n        inputValue: 5,\n        updateValue: 0\n    };\n\n    add() {\n        this.setState((currentState: IState) => {\n            const {inputValue, updateValue} = currentState;\n            const result = inputValue + updateValue;\n            return {inputValue, updateValue: result};\n        });\n    }\n\n    remove() {\n        this.setState((currentState: IState) => {\n            const {inputValue, updateValue} = currentState;\n            const result = updateValue - inputValue;\n            return {inputValue, updateValue: result};\n        });\n    }\n\n    updateValue(value: number) {\n        this.setState({\n            inputValue: value\n        });\n    }\n\n    render() {\n        const {inputValue, updateValue} = this.state;\n        return (\n            <div className={styles.lesson1}>\n                <h1>Lesson 1 - Simple counter</h1>\n\n                <h3>Demo</h3>\n\n                <div className={styles.codeDemo}>\n                    <p className={styles.text}>Total: {updateValue}</p>\n                    <InputWidget\n                        add={() => this.add()}\n                        remove={() => this.remove()}\n                        inputValue={inputValue}\n                        change={(val) => this.updateValue(val)}\n                    />\n                </div>\n\n                <h3>Description:</h3>\n                <Description/>\n            </div>\n        );\n    }\n}\n`}\n                </code>\n            </pre>\n            <p>InputWidget.tsx is a function where we passing values and callbacks. The component itself doesn't\n                care about where it will be placed or how values will be calculated.</p>\n            <pre>\n                <code className=\"language-javascript\">\n{`\nexport const InputWidget = ({change, add, remove, inputValue}: IProps) => {\n    return (\n        <React.Fragment>\n            <div>\n                <Button\n                    variant=\"contained\"\n                    onClick={add}\n                >\n                    Add {inputValue}\n                </Button>\n                <Button\n                    variant=\"contained\"\n                    onClick={remove}\n                >\n                    Remove {inputValue}\n                </Button>\n            </div>\n            <Input\n                type=\"number\"\n                value={inputValue}\n                onChange={({currentTarget}) => {\n                    change(+currentTarget.value);\n                }}\n                className={styles.inputValue}\n            />\n        </React.Fragment>\n    );\n};\n`}\n                </code>\n            </pre>\n        </div>\n    );\n};\n","import {Button, Input} from '@material-ui/core';\nimport React from 'react';\nimport {Ifn} from '../../lib/interfaces';\nimport styles from './InputWidget.module.scss';\n\ninterface IProps {\n    change: (a: number) => void;\n    add: Ifn<void>;\n    remove: Ifn<void>;\n    inputValue: number;\n}\n\nexport const InputWidget = ({change, add, remove, inputValue}: IProps) => {\n    return (\n        <React.Fragment>\n            <div className={styles.buttons}>\n                <Button\n                    variant=\"contained\"\n                    onClick={add}\n                >\n                    Add {inputValue}\n                </Button>\n                <Button\n                    variant=\"contained\"\n                    onClick={remove}\n                >\n                    Remove {inputValue}\n                </Button>\n            </div>\n            <Input\n                type=\"number\"\n                value={inputValue}\n                onChange={({currentTarget}) => {\n                    change(+currentTarget.value);\n                }}\n                className={styles.inputValue}\n            />\n        </React.Fragment>\n    );\n};\n","import React from 'react';\nimport {Description} from './Description/Description';\nimport {InputWidget} from './widgets/InputWidget';\n\nimport styles from './Lesson1.module.scss';\n\ninterface IProps {\n    history: object;\n    location: object;\n    match: object;\n    staticContext: undefined;\n}\n\ninterface IState {\n    inputValue: number;\n    updateValue: number;\n}\n\nexport class Lesson1 extends React.Component {\n\n    constructor(props: IProps) {\n        super(props);\n    }\n\n    state: IState = {\n        inputValue: 5,\n        updateValue: 0\n    };\n\n    add() {\n        this.setState((currentState: IState) => {\n            const {inputValue, updateValue} = currentState;\n            const result = inputValue + updateValue;\n            return {inputValue, updateValue: result};\n        });\n    }\n\n    remove() {\n        this.setState((currentState: IState) => {\n            const {inputValue, updateValue} = currentState;\n            const result = updateValue - inputValue;\n            return {inputValue, updateValue: result};\n        });\n    }\n\n    updateValue(value: number) {\n        this.setState({\n            inputValue: value\n        });\n    }\n\n    render() {\n        const {inputValue, updateValue} = this.state;\n        return (\n            <div className={styles.lesson1}>\n                <h1>Lesson 1 - Simple counter</h1>\n\n                <h3>Demo</h3>\n\n                <div className={styles.codeDemo}>\n                    <p className={styles.output}>Total: {updateValue}</p>\n                    <InputWidget\n                        add={() => this.add()}\n                        remove={() => this.remove()}\n                        inputValue={inputValue}\n                        change={(val) => this.updateValue(val)}\n                    />\n                </div>\n\n                <h3>Description:</h3>\n                <Description/>\n            </div>\n        );\n    }\n}\n\nexport default Lesson1;\n","import {Ifn} from '../../lib/interfaces';\n\nexport interface IScope {\n    inputValue: number;\n    updateValue: number;\n}\n\nclass Counter {\n    handlers: Array<Ifn<void>> = [];\n    scope: IScope;\n\n    constructor(initialScope: IScope) {\n        this.scope = initialScope;\n    }\n\n    add() {\n        const {inputValue, updateValue} = this.scope;\n        const result = inputValue + updateValue;\n        this.set({inputValue, updateValue: result});\n    }\n\n    remove() {\n        const {inputValue, updateValue} = this.scope;\n        const result = updateValue - inputValue;\n        this.set({inputValue, updateValue: result});\n    }\n\n    inputChange(val: number) {\n        const {updateValue} = this.scope;\n\n        this.set({inputValue: +val, updateValue});\n    }\n\n    set(scope: IScope) {\n        this.scope = scope;\n        this.handlers.forEach((handler) => {\n            handler(scope);\n        });\n    }\n\n    get() {\n        return this.scope;\n    }\n\n    update(handler: Ifn<void>) {\n        this.handlers = [...this.handlers, handler];\n        return {};\n    }\n\n    clear = () => {\n        this.handlers = [];\n    }\n}\n\nexport const counter = (initialScope: IScope) => new Counter(initialScope);\n","import {Button, Input} from '@material-ui/core';\nimport React from 'react';\nimport {Ifn} from '../../lib/interfaces';\nimport styles from './InputWidget.module.scss';\n\ninterface IProps {\n    inputChange: Ifn<void>;\n    leftButtonHandler: Ifn<void>;\n    rightButtonHandler: Ifn<void>;\n    inputValue: number;\n}\n\nexport const InputWidget = (\n    {\n        inputChange,\n        leftButtonHandler,\n        rightButtonHandler,\n        inputValue\n    }: IProps) => {\n    return (\n        <React.Fragment>\n            <div className={styles.buttons}>\n                <Button\n                    variant=\"contained\"\n                    onClick={\n                        () => {\n                            leftButtonHandler();\n                        }\n                    }\n                >Add {inputValue}\n                </Button>\n                <Button\n                    variant=\"contained\"\n                    onClick={\n                        () => {\n                            rightButtonHandler();\n                        }\n                    }\n                >Remove {inputValue}\n                </Button>\n            </div>\n            <Input\n                type=\"number\"\n                value={inputValue}\n                onChange={\n                    ({currentTarget: {value}}) => {\n                        inputChange(value);\n                    }}\n                className={styles.inputValue}\n            />\n        </React.Fragment>\n    );\n};\n","import React from 'react';\nimport {counter, IScope} from './model/counter';\nimport {InputWidget} from './widgets/InputWidget';\n\nimport styles from './Lesson2.module.scss';\n\ninterface IProps {\n    history: object;\n    location: object;\n    match: object;\n    staticContext: undefined;\n}\n\nconst initialState = {\n    inputValue: 5,\n    updateValue: 0\n};\n\nexport class Lesson2 extends React.Component {\n    state: IScope;\n    counter = counter(initialState);\n\n    constructor(props: IProps) {\n        super(props);\n        this.state = this.counter.get();\n        this.counter.update((scope: IScope) => {\n            this.setState(scope);\n        });\n    }\n\n    render() {\n        const {inputValue, updateValue} = this.state;\n\n        return (\n            <div className={styles.Lesson2}>\n                <h1>Lesson 2</h1>\n\n                <h3>Demo</h3>\n\n                <div className={styles.codeDemo}>\n                    <p className={styles.output}>Total: {updateValue}</p>\n                    <InputWidget\n                        leftButtonHandler={\n                            () => {\n                                this.counter.add();\n                            }\n                        }\n                        rightButtonHandler={\n                            () => {\n                                this.counter.remove();\n                            }\n                        }\n\n                        inputValue={inputValue}\n                        inputChange={(value: number) => {\n                            this.counter.inputChange(value);\n                        }}\n                    />\n                </div>\n\n                <h3>Description:</h3>\n            </div>\n        );\n    }\n}\n\nexport default Lesson2;\n","import {CssBaseline, Grid, List, ListItem} from '@material-ui/core';\nimport React, {Component} from 'react';\nimport {BrowserRouter as Router, Link, Route} from 'react-router-dom';\nimport styles from './App.module.scss';\nimport './common/prism.css';\n\nimport Home from './Home';\nimport Lesson1 from './lesson-1/Lesson1';\nimport Lesson2 from './lesson-2/Lesson2';\n\nclass App extends Component {\n    state = {\n        selectedIndex: 0,\n    };\n\n    handleListItemClick = (ev: React.MouseEvent, index: number) => {\n        this.setState({selectedIndex: index});\n    };\n\n    render() {\n        return (\n            <Router basename={process.env.PUBLIC_URL}>\n                <div className={styles.App}>\n                    <CssBaseline/>\n                    <Grid container={true} spacing={16}>\n                        <Grid item={true} xs={4}>\n                            <List component=\"nav\">\n                                <Link to=\"/\">\n                                    <ListItem\n                                        button={true}\n                                        selected={this.state.selectedIndex === 1}\n                                        onClick={(ev) => this.handleListItemClick(ev, 1)}\n                                    >\n                                        Home\n                                    </ListItem>\n                                </Link>\n                                <Link to=\"/lesson1\">\n                                    <ListItem\n                                        button={true}\n                                        selected={this.state.selectedIndex === 2}\n                                        onClick={(ev) => this.handleListItemClick(ev, 2)}\n                                    >\n                                        Lesson 1 - Simple counter\n                                    </ListItem>\n                                </Link>\n                                <Link to=\"/lesson-2\">\n                                    <ListItem\n                                        button={true}\n                                        selected={this.state.selectedIndex === 3}\n                                        onClick={(ev) => this.handleListItemClick(ev, 3)}\n                                    >\n                                        Lesson 2 - Simple counter\n                                    </ListItem>\n                                </Link>\n                            </List>\n                        </Grid>\n                        <Grid item={true} xs={8}>\n                            <section>\n                                <Route exact={true} path=\"/\" component={Home}/>\n                                <Route path=\"/lesson1\" component={Lesson1}/>\n                                <Route path=\"/lesson-2\" component={Lesson2}/>\n                            </section>\n                        </Grid>\n                    </Grid>\n                </div>\n            </Router>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ninterface IConfig {\n    onSuccess?: (registration: ServiceWorkerRegistration) => void;\n    onUpdate?: (registration: ServiceWorkerRegistration) => void;\n}\n\nexport function register(config?: IConfig) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(\n            (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n            window.location.href\n        );\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    /*console.log(\n                        'This web app is being served cache-first by a service ' +\n                        'worker. To learn more, visit http://bit.ly/CRA-PWA'\n                    );*/\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl: string, config?: IConfig) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then((registration) => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            /*console.log(\n                                'New content is available and will be used when all ' +\n                                'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n                            );*/\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            // console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch((error) => {\n            // console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: IConfig) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n        .then((response) => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type');\n            if (\n                response.status === 404 ||\n                (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then((registration) => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            /*console.log(\n                'No internet connection found. App is running in offline mode.'\n            );*/\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then((registration) => {\n            registration.unregister();\n        });\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App/>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"codeDemo\":\"Lesson1_codeDemo__zcOLr\",\"output\":\"Lesson1_output__3XlSb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"codeDemo\":\"Lesson2_codeDemo__3N42R\",\"output\":\"Lesson2_output__22E_1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputValue\":\"InputWidget_inputValue__GK9Hf\",\"buttons\":\"InputWidget_buttons__2HfxO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputValue\":\"InputWidget_inputValue__3o0J0\",\"buttons\":\"InputWidget_buttons__r5n5S\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__1OPrb\"};"],"sourceRoot":""}