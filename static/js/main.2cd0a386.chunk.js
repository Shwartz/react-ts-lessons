(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{195:function(e,t,n){e.exports=n(359)},202:function(e,t,n){},357:function(e,t,n){},359:function(e,t,n){"use strict";n.r(t);var a=n(0),o=n.n(a),u=n(30),s=n.n(u),l=n(19),r=n(20),i=n(23),c=n(22),d=n(24),p=n(8),h=n(362),m=n(361),f=n(363),v=n(364),w=n(92),b=n.n(w),g=n(93),V=n.n(g),y=function(){return o.a.createElement("div",{className:V.a.noMatch},"404 page")},E=(n(202),function(e){function t(){return Object(l.a)(this,t),Object(i.a)(this,Object(c.a)(t).apply(this,arguments))}return Object(d.a)(t,e),Object(r.a)(t,[{key:"render",value:function(){return o.a.createElement("div",null,o.a.createElement("h1",null,"Welcome to React Typescript tutorial"),o.a.createElement("p",null,"This tutorial aims to create a step by step examples on how to build a scalable one-page application with functional programming pattern in mind"),o.a.createElement("p",null,"In the following lessons, we will extend counter from a single component to fully scalable MVVM app by using React as dom manipulation library"),o.a.createElement("p",null,"You can see the source code in Github:",o.a.createElement("a",{href:"https://github.com/Shwartz/react-ts-lessons"},"https://github.com/Shwartz/react-ts-lessons")),o.a.createElement("h4",null,"Lesson 1"),o.a.createElement("p",null,"Counter widget built based on ReactJS documentation"),o.a.createElement("h4",null,"Lesson 2"),o.a.createElement("p",null,"The same Counter widget however we moving out logic into a model."))}}]),t}(o.a.Component)),C=n(94),S=n.n(C),k=n(53),j=new S.a({highlight:function(e){return t=Object(k.highlight)(e,k.languages.javascript),'<pre class="language-javascript">'.concat(t,"</pre>");var t}}),_=function(e){var t,n=e.children;return o.a.createElement("div",{dangerouslySetInnerHTML:{__html:(t=n,j.render(t))}})},I=function(e){return"\n```javascript\n".concat(e,"\n```\n")},O=function(){var e="\n\n### Description:\n\nWe will use a Counter Widget with three methods such as Add, Remove, Input and show a Total amount after a calculation.\n\n### What will you learn\n\n - How to use the *`setState`* method for *`React.Component`*\n - Use of Arrow functions in *`Render()`* method and in props\n - Use of Typescript types for Stateless Components, interface definition and props\n\n\n### Source\n\n[https://github.com/Shwartz/react-ts-lessons/tree/master/src/lesson-1](https://github.com/Shwartz/react-ts-lessons/tree/master/src/lesson-1)\n\n\n## Methods in Class (React.Component)\n\n> *`React.Component`* is a Javascript Class.\n\n> *`Stateless Component`* is a function, with a return type of React element.\n\nIt is crucial to define Prototype methods in Javascript class with *`mehtodName(){}`*, instead of *`methodName = () => {}`*.\nSecond example will assign a default value by initialising a Class.\n\nLet's take a closer look at the setState method.\n\nAs per documentation:\n> *`this.props`* and *`this.state`* may be updated asynchronously; you should not rely on their values for calculating the next state.\n\n[ReactJS.org: State updates may be asynchronous](https://reactjs.org/docs/state-and-lifecycle.html#state-updates-may-be-asynchronous)\n\n\n".concat(I("\n    ...\n    add() {\n        const {inputValue, updateValue} = this.state;\n        const result = inputValue + updateValue;\n        this.setState(\n            {\n                inputValue,\n                updateValue: result\n            }\n        );\n    }\n    ...\n\n"),"\n\nsetState() API accepts Object and Function. The previous example use Object to update state. Nothing wrong with an example but it could fail in some situations (also described in the documentation).\n\nSince we can use Function example below would be a recommended way.\n\n").concat(I("\n    ...\n    add() {\n        this.setState((currentState: IState) => {\n            const {inputValue, updateValue} = currentState;\n            const result = inputValue + updateValue;\n            return {inputValue, updateValue: result};\n        });\n    }\n    ...\n"),"\n\nCallback in *`setState`* according to API returns current State and Props. That means you will be safe in the asynchronous application.\n\nWhen using this approach, there is no need for *`this`* statement inside the callback.\n\n\nThere is nothing wrong to use *`setState`* with a passing Object. Use this approach when you do not depend on a current State.\n\n").concat(I("\n    ...\n    updateValue(value: number) {\n        this.setState({\n            inputValue: value\n        });\n    }\n    ...\n"),"\n\n## Render method\n\n>There are some rumours about performance issues when using arrow function inside the method you passing to a component. Since this is a sensitive subject, I suggest to read this article, and that should settle any doubts.\n> [React, Inline Functions, and Performance](https://cdb.reacttraining.com/react-inline-functions-and-performance-bdff784f5578)\n\nThe recommended approach to defining all the State values at the top of the render() function\n\n").concat(I("\n    ...\n    render() {\n        const {inputValue, updateValue} = this.state;\n    ...\n"),"\n\nInstead of passing methods to another React component use callback in your component. This way you won't need to pass *`this`* around or even worse to use an ugly *`.bind(this)`*.\n\n\n").concat(I("\n    ...\n    add={() => {\n            this.add()\n        }}\n    ...\n"),"\n\nIn our case, we do not use a callback. Therefore we could write arrow function without closure as a callback will be ignored.\n\n*`() => this.add() `*\n\nHowever, to make code consistent, we suggest using closers always like in the example above.\n");return o.a.createElement("div",null,o.a.createElement(_,null,e),o.a.createElement("hr",null),o.a.createElement("p",null,"To produce a counter we use main Class Lesson1 with methods add(), remove() and update(). The counter itself is a /widget/InputWidget.tsx."),o.a.createElement("p",null,"The main problem with this approach is that we can't easily reuse this widget. To reuse we need to copy all the methods and a widget to the needed Class. Clearly, this would create a lot of code duplication."),o.a.createElement("p",null,"This is our Lesson1 Class:"),o.a.createElement("p",null,"InputWidget.tsx is a function where we passing values and callbacks. The component itself doesn't care about where it will be placed or how values will be calculated."))},x=n(54),T=n.n(x),L=function(e){var t=e.change,n=e.add,u=e.remove,s=e.inputValue;return o.a.createElement(a.Fragment,null,o.a.createElement("div",{className:T.a.buttons},o.a.createElement(p.a,{variant:"contained",onClick:function(){return u()}},"Remove ",s),o.a.createElement(p.a,{variant:"contained",onClick:function(){return n()}},"Add ",s)),o.a.createElement(p.d,{type:"number",value:s,onChange:function(e){var n=e.currentTarget;return t(+n.value)},className:T.a.inputValue}))},N=n(38),D=n.n(N),R=function(e){function t(e){var n;return Object(l.a)(this,t),(n=Object(i.a)(this,Object(c.a)(t).call(this,e))).state={inputValue:5,updateValue:0},n}return Object(d.a)(t,e),Object(r.a)(t,[{key:"add",value:function(){this.setState(function(e){var t=e.inputValue;return{inputValue:t,updateValue:t+e.updateValue}})}},{key:"remove",value:function(){this.setState(function(e){var t=e.inputValue;return{inputValue:t,updateValue:e.updateValue-t}})}},{key:"updateValue",value:function(e){this.setState({inputValue:e})}},{key:"render",value:function(){var e=this,t=this.state,n=t.inputValue,a=t.updateValue;return o.a.createElement("div",{className:D.a.lesson1},o.a.createElement("h1",null,"Lesson 1 - Simple counter"),o.a.createElement("h3",null,"Counter Widget demo"),o.a.createElement("div",{className:D.a.codeDemo},o.a.createElement("p",{className:D.a.output},"Total: ",a),o.a.createElement(L,{add:function(){return e.add()},remove:function(){return e.remove()},inputValue:n,change:function(t){return e.updateValue(t)}})),o.a.createElement(O,null))}}]),t}(o.a.Component),W=function(){return o.a.createElement("div",null,o.a.createElement(_,null,"\n### What you will learn\n\n - Create counter Class and move functionality outside Component\n - Handle communication between counter Class and Component\n\n## Counter Class\n\nNow we create counter class where we move, all counter functionality outside component.\n\n> Here is advantage, if you decide to use React Native,\n> or different DOM manipulation library or framework. Counter Class will not change.\n\nThis is only one small use case, but we try to show you idea, how to plan your application, to fit in to agile environment,\nwhere functionality changes is day to day requirement.\n\nOk, because we are not yet in generic types, we will start on counter particular use case, in next lesson, we will make this\nsolution generic.\n\nFirst we need Counter Object, where we collect `inputValue` and `updatedValue`\n"),o.a.createElement(_,null,"\n```javascript\nexport class Lesson1 extends React.Component {\n\n    constructor(props: IProps) {\n        super(props);\n    }\n\n    state: IState = {\n        inputValue: 5,\n        updateValue: 0\n    };\n\n    add() {\n        this.setState((currentState: IState) => {\n            const {inputValue, updateValue} = currentState;\n            const result = inputValue + updateValue;\n            return {inputValue, updateValue: result};\n        });\n    }\n\n    remove() {\n        this.setState((currentState: IState) => {\n            const {inputValue, updateValue} = currentState;\n            const result = updateValue - inputValue;\n            return {inputValue, updateValue: result};\n        });\n    }\n\n    updateValue(value: number) {\n        this.setState({\n            inputValue: value\n        });\n    }\n\n    render() {\n        const {inputValue, updateValue} = this.state;\n        return (\n            <div className={styles.lesson1}>\n                <h1>Lesson 1 - Simple counter</h1>\n\n                <h3>Demo</h3>\n\n                <div className={styles.codeDemo}>\n                    <p className={styles.text}>Total: {updateValue}</p>\n                    <InputWidget\n                        add={() => this.add()}\n                        remove={() => this.remove()}\n                        inputValue={inputValue}\n                        change={(val) => this.updateValue(val)}\n                    />\n                </div>\n\n                <h3>Description:</h3>\n                <Description/>\n            </div>\n        );\n    }\n}\n```\n    "))},A=n(97),M=function(){function e(t){Object(l.a)(this,e),this.handlers=[],this.scope=void 0,this.scope=t}return Object(r.a)(e,[{key:"add",value:function(){var e=this.scope,t=e.inputValue,n=t+e.updateValue;this.set({inputValue:t,updateValue:n})}},{key:"remove",value:function(){var e=this.scope,t=e.inputValue,n=e.updateValue-t;this.set({inputValue:t,updateValue:n})}},{key:"inputChange",value:function(e){var t=this.scope.updateValue;this.set({inputValue:e,updateValue:t})}},{key:"set",value:function(e){this.scope=e,this.handlers.forEach(function(t){t(e)})}},{key:"get",value:function(){return this.scope}},{key:"update",value:function(e){this.handlers=[].concat(Object(A.a)(this.handlers),[e])}},{key:"clear",value:function(){this.handlers=[]}}]),e}(),H=function(e){return new M(e)},B=n(55),P=n.n(B),F=function(e){var t=e.leftButtonHandler,n=e.leftButtonLabel,u=e.rightButtonHandler,s=e.rightButtonLabel,l=e.inputChange,r=e.inputValue;return o.a.createElement(a.Fragment,null,o.a.createElement("div",{className:P.a.buttons},o.a.createElement(p.a,{variant:"contained",onClick:function(){return t()}},n," ",r),o.a.createElement(p.a,{variant:"contained",onClick:function(){return u()}},s," ",r)),o.a.createElement(p.d,{type:"number",value:r,onChange:function(e){var t=e.currentTarget.value;return l(+t)},className:P.a.inputValue}))},J=n(39),z=n.n(J),U={inputValue:5,updateValue:0},q=function(e){function t(e){var n;return Object(l.a)(this,t),(n=Object(i.a)(this,Object(c.a)(t).call(this,e))).state=void 0,n.counter=H(U),n.state=n.counter.get(),n.counter.update(function(e){n.setState(e)}),n}return Object(d.a)(t,e),Object(r.a)(t,[{key:"render",value:function(){var e=this,t=this.state,n=t.inputValue,a=t.updateValue;return o.a.createElement("div",{className:z.a.Lesson2},o.a.createElement("h1",null,"Lesson 2"),o.a.createElement("h3",null,"Demo"),o.a.createElement("div",{className:z.a.codeDemo},o.a.createElement("p",{className:z.a.output},"Total: ",a),o.a.createElement(F,{leftButtonHandler:function(){e.counter.add()},rightButtonHandler:function(){e.counter.remove()},leftButtonLabel:"Remove",rightButtonLabel:"Add",inputChange:function(t){e.counter.inputChange(t)},inputValue:n})),o.a.createElement("h3",null,"Description:"),o.a.createElement(W,null))}}]),t}(a.Component),G=function(e){function t(){var e,n;Object(l.a)(this,t);for(var a=arguments.length,o=new Array(a),u=0;u<a;u++)o[u]=arguments[u];return(n=Object(i.a)(this,(e=Object(c.a)(t)).call.apply(e,[this].concat(o)))).state={selectedIndex:0},n.handleListItemClick=function(e,t){n.setState({selectedIndex:t})},n}return Object(d.a)(t,e),Object(r.a)(t,[{key:"render",value:function(){var e=this;return o.a.createElement(h.a,{basename:"/react-ts-lessons"},o.a.createElement("div",{className:b.a.App},o.a.createElement(p.b,null),o.a.createElement(p.c,{container:!0,spacing:16},o.a.createElement(p.c,{item:!0,sm:4,xs:12},o.a.createElement(p.e,{component:"nav"},o.a.createElement(m.a,{to:"/"},o.a.createElement(p.f,{button:!0,selected:1===this.state.selectedIndex,onClick:function(t){return e.handleListItemClick(t,1)}},"Home")),o.a.createElement(m.a,{to:"/lesson-1"},o.a.createElement(p.f,{button:!0,selected:2===this.state.selectedIndex,onClick:function(t){return e.handleListItemClick(t,2)}},"Lesson 1 - Simple counter")),o.a.createElement(m.a,{to:"/lesson-2"},o.a.createElement(p.f,{button:!0,selected:3===this.state.selectedIndex,onClick:function(t){return e.handleListItemClick(t,3)}},"Lesson 2 - Simple counter")))),o.a.createElement(p.c,{item:!0,sm:8,xs:12},o.a.createElement("section",null,o.a.createElement(f.a,null,o.a.createElement(v.a,{exact:!0,path:"/",component:E}),o.a.createElement(v.a,{path:"/lesson-1",component:R}),o.a.createElement(v.a,{path:"/lesson-2",component:q}),o.a.createElement(v.a,{component:y})))))))}}]),t}(a.Component);n(357),Boolean("localhost"===window.location.hostname||"[::1]"===window.location.hostname||window.location.hostname.match(/^127(?:\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));s.a.render(o.a.createElement(G,null),document.getElementById("root")),"serviceWorker"in navigator&&navigator.serviceWorker.ready.then(function(e){e.unregister()})},38:function(e,t,n){e.exports={codeDemo:"Lesson1_codeDemo__1-_Pe",output:"Lesson1_output__10ADM"}},39:function(e,t,n){e.exports={codeDemo:"Lesson2_codeDemo__2qKgf",output:"Lesson2_output__3Nmk0"}},54:function(e,t,n){e.exports={inputValue:"InputWidget_inputValue__2QM0w",buttons:"InputWidget_buttons__UPT99"}},55:function(e,t,n){e.exports={inputValue:"InputWidget_inputValue__hWEDH",buttons:"InputWidget_buttons__1MhTv"}},92:function(e,t,n){e.exports={App:"App_App__GDdpt"}},93:function(e,t,n){e.exports={noMatch:"NoMatch_noMatch__1_Oca"}}},[[195,2,1]]]);
//# sourceMappingURL=main.2cd0a386.chunk.js.map