{"version":3,"sources":["Home.tsx","lesson-1/widgets/InputWidget.tsx","lesson-1/Lesson1.tsx","lesson-2/model/counter.tsx","lesson-2/widgets/InputWidget.tsx","lesson-2/Lesson2.tsx","App.tsx","serviceWorker.ts","index.tsx","App.module.scss","lesson-1/Lesson1.module.scss","lesson-2/Lesson2.module.scss"],"names":["Home","_React$Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","react_default","a","createElement","React","Component","InputWidget","_ref","change","add","remove","inputValue","Fragment","type","onChange","_ref2","currentTarget","onClick","Lesson1","props","_this","call","state","updateValue","setState","currentState","_this2","_this$state","className","styles","InputWidget_InputWidget","val","Counter","initialScope","handlers","scope","clear","_this$scope","result","set","_this$scope2","forEach","handler","concat","toConsumableArray","counter","inputChange","leftButtonHandler","rightButtonHandler","initialState","Lesson2","get","update","widgets_InputWidget_InputWidget","App","selectedIndex","handleListItemClick","ev","index","console","log","process","BrowserRouter","basename","index_es","container","spacing","item","xs","component","Link","to","button","selected","Route","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.07f1ac17.chunk.js","sourcesContent":["import React from 'react';\n\nexport class Home extends React.Component {\n\n    render() {\n        return (\n            <div>\n                <h1>Welcome to React Typescript tutorial</h1>\n                <p>Aim of this tutorial is to create step by step examples on how to build scalable one page application\n                    with functional programming pattern in mind</p>\n\n                <p>Each lesson is added under <b>/src/lesson-1/</b> folder. Each folder has specific task to solve</p>\n            </div>\n        );\n    }\n}\n\nexport default Home;\n","import React from 'react';\nimport {Ifn} from '../../lib/interfaces';\n\ninterface IProps {\n    change: Ifn<void>;\n    add: Ifn<void>;\n    remove: Ifn<void>;\n    inputValue: number;\n}\n\nexport const InputWidget = ({change, add, remove, inputValue}: IProps) => {\n    return (\n        <React.Fragment>\n            <input\n                type=\"number\"\n                value={inputValue}\n                onChange={({currentTarget}) => {change(currentTarget.value); }}\n            />\n            <div>\n                <button onClick={add}>Add {inputValue}</button>\n                <button onClick={remove}>Remove {inputValue}</button>\n            </div>\n        </React.Fragment>\n    );\n};\n","import React from 'react';\nimport {InputWidget} from './widgets/InputWidget';\n\nimport styles from './Lesson1.module.scss';\n\ninterface IProps {\n    history: object;\n    location: object;\n    match: object;\n    staticContext: undefined;\n}\n\ninterface IState {\n    inputValue: number;\n    updateValue: number;\n}\n\nexport class Lesson1 extends React.Component {\n\n    constructor(props: IProps) {\n        super(props);\n    }\n\n    state: IState = {\n        inputValue: 5,\n        updateValue: 0\n    };\n\n    add() {\n        this.setState((currentState: IState) => {\n            const {inputValue, updateValue} = currentState;\n            const result = inputValue + updateValue;\n            return {inputValue, updateValue: result};\n        });\n    }\n\n    remove() {\n        this.setState((currentState: IState) => {\n            const {inputValue, updateValue} = currentState;\n            const result = updateValue - inputValue;\n            return {inputValue, updateValue: result};\n        });\n    }\n\n    updateValue(value: number) {\n        this.setState({\n            inputValue: value\n        });\n    }\n\n    render() {\n        const {inputValue, updateValue} = this.state;\n\n        return (\n            <div className={styles.Lesson1}>\n                <h1>Lesson 1 - Simple counter</h1>\n\n                <h3>Description</h3>\n\n                <h3>Example:</h3>\n                <hr/>\n                <p>Updated value: {updateValue}</p>\n                <InputWidget\n                    add={() => this.add()}\n                    remove={() => this.remove()}\n                    inputValue={inputValue}\n                    change={(val) => this.updateValue(val)}\n                />\n                <hr/>\n                <h3>Code samples:</h3>\n            </div>\n        );\n    }\n}\n\nexport default Lesson1;\n","import {Ifn} from '../../lib/interfaces';\n\nexport interface IScope {\n    inputValue: number;\n    updateValue: number;\n}\n\nclass Counter {\n    handlers: Array<Ifn<void>> = [];\n    scope: IScope;\n\n    constructor(initialScope: IScope) {\n        this.scope = initialScope;\n    }\n\n    add() {\n        const {inputValue, updateValue} = this.scope;\n        const result = inputValue + updateValue;\n        this.set({inputValue, updateValue: result});\n    }\n\n    remove() {\n        const {inputValue, updateValue} = this.scope;\n        const result = updateValue - inputValue;\n        this.set({inputValue, updateValue: result});\n    }\n\n    inputChange(val: number) {\n        const {updateValue} = this.scope;\n\n        this.set({inputValue: +val, updateValue});\n    }\n\n    set(scope: IScope) {\n        this.scope = scope;\n        this.handlers.forEach((handler) => {\n            handler(scope);\n        });\n    }\n\n    get() {\n        return this.scope;\n    }\n\n    update(handler: Ifn<void>) {\n        this.handlers = [...this.handlers, handler];\n        return {};\n    }\n\n    clear = () => {\n        this.handlers = [];\n    }\n}\n\nexport const counter = (initialScope: IScope) => new Counter(initialScope);\n","import React from 'react';\nimport {Ifn} from '../../lib/interfaces';\n\ninterface IProps {\n    inputChange: Ifn<void>;\n    leftButtonHandler: Ifn<void>;\n    rightButtonHandler: Ifn<void>;\n    inputValue: number;\n}\n\nexport const InputWidget = (\n    {\n        inputChange,\n        leftButtonHandler,\n        rightButtonHandler,\n        inputValue\n    }: IProps) => {\n    return (\n        <React.Fragment>\n            <input\n                type=\"number\"\n                value={inputValue}\n                onChange={\n                    ({currentTarget: {value}}) => {\n                        inputChange(value);\n                    }}\n            />\n            <div>\n                <button\n                    onClick={\n                        () => {\n                            leftButtonHandler();\n                        }\n                    }\n                >Add {inputValue}\n                </button>\n                <button\n                    onClick={\n                        () => {\n                            rightButtonHandler();\n                        }\n                    }\n                >Remove {inputValue}\n                </button>\n            </div>\n        </React.Fragment>\n    );\n};\n","import React from 'react';\nimport {counter, IScope} from './model/counter';\nimport {InputWidget} from './widgets/InputWidget';\n\nimport styles from './Lesson2.module.scss';\n\ninterface IProps {\n    history: object;\n    location: object;\n    match: object;\n    staticContext: undefined;\n}\n\nconst initialState = {\n    inputValue: 5,\n    updateValue: 5\n};\n\nexport class Lesson2 extends React.Component {\n    state: IScope;\n    counter = counter(initialState);\n\n    constructor(props: IProps) {\n        super(props);\n        this.state = this.counter.get();\n        this.counter.update((scope: IScope) => {\n            this.setState(scope);\n        });\n    }\n\n    render() {\n        const {inputValue, updateValue} = this.state;\n\n        return (\n            <div className={styles.Lesson2}>\n                <h1>Lesson 2</h1>\n\n                <h3>Description</h3>\n\n                <h3>Example:</h3>\n                <hr/>\n                <p>Updated value: {updateValue}</p>\n                <InputWidget\n                    leftButtonHandler={\n                        () => {\n                            this.counter.add();\n                        }\n                    }\n                    rightButtonHandler={\n                        () => {\n                            this.counter.remove();\n                        }\n                    }\n\n                    inputValue={inputValue}\n                    inputChange={(value: number) => {\n                        this.counter.inputChange(value);\n                    }}\n                />\n                <hr/>\n                <h3>Code samples:</h3>\n            </div>\n        );\n    }\n}\n\nexport default Lesson2;\n","import {CssBaseline, Grid, List, ListItem} from '@material-ui/core';\nimport React, {Component} from 'react';\nimport {BrowserRouter as Router, Link, Route} from 'react-router-dom';\nimport styles from './App.module.scss';\n\nimport Home from './Home';\nimport Lesson1 from './lesson-1/Lesson1';\nimport Lesson2 from './lesson-2/Lesson2';\n\nclass App extends Component {\n    state = {\n        selectedIndex: 0,\n    };\n\n    handleListItemClick = (ev: React.MouseEvent, index: number) => {\n        this.setState({selectedIndex: index});\n    };\n\n    render() {\n        console.log('process.env.PUBLIC_URL: ', process.env.PUBLIC_URL);\n\n        return (\n            <Router basename={process.env.PUBLIC_URL}>\n                <div className={styles.App}>\n                    <CssBaseline/>\n                    <Grid container={true} spacing={16}>\n                        <Grid item={true} xs={4}>\n                            <List component=\"nav\">\n                                <Link to=\"/\">\n                                    <ListItem\n                                        button={true}\n                                        selected={this.state.selectedIndex === 1}\n                                        onClick={(ev) => this.handleListItemClick(ev, 1)}\n                                    >\n                                        Home\n                                    </ListItem>\n                                </Link>\n                                <Link to=\"/lesson1\">\n                                    <ListItem\n                                        button={true}\n                                        selected={this.state.selectedIndex === 2}\n                                        onClick={(ev) => this.handleListItemClick(ev, 2)}\n                                    >\n                                        Lesson 1 - Simple counter\n                                    </ListItem>\n                                </Link>\n                                <Link to=\"/lesson-2\">\n                                    <ListItem\n                                        button={true}\n                                        selected={this.state.selectedIndex === 3}\n                                        onClick={(ev) => this.handleListItemClick(ev, 3)}\n                                    >\n                                        Lesson 2\n                                    </ListItem>\n                                </Link>\n                            </List>\n                        </Grid>\n                        <Grid item={true} xs={8}>\n                            <section>\n                                <Route exact={true} path=\"/\" component={Home}/>\n                                <Route path=\"/lesson1\" component={Lesson1}/>\n                                <Route path=\"/lesson-2\" component={Lesson2}/>\n                            </section>\n                        </Grid>\n                    </Grid>\n                </div>\n            </Router>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ninterface IConfig {\n    onSuccess?: (registration: ServiceWorkerRegistration) => void;\n    onUpdate?: (registration: ServiceWorkerRegistration) => void;\n}\n\nexport function register(config?: IConfig) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(\n            (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n            window.location.href\n        );\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    /*console.log(\n                        'This web app is being served cache-first by a service ' +\n                        'worker. To learn more, visit http://bit.ly/CRA-PWA'\n                    );*/\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl: string, config?: IConfig) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then((registration) => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            /*console.log(\n                                'New content is available and will be used when all ' +\n                                'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n                            );*/\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            // console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch((error) => {\n            // console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: IConfig) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n        .then((response) => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type');\n            if (\n                response.status === 404 ||\n                (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then((registration) => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            /*console.log(\n                'No internet connection found. App is running in offline mode.'\n            );*/\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then((registration) => {\n            registration.unregister();\n        });\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App/>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__1OPrb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Lesson1\":\"Lesson1_Lesson1__1uhsa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Lesson2\":\"Lesson2_Lesson2__x4gpH\"};"],"sourceRoot":""}